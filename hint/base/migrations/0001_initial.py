# Generated by Django 5.0.2 on 2024-04-10 17:10

import base.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DownloadFileMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_path', models.TextField()),
                ('interaction_count', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='HintVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('month', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MITerm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mi_id', models.CharField(max_length=7, unique=True)),
                ('name', models.TextField()),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Organism',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax_id', models.PositiveIntegerField(unique=True)),
                ('name', models.TextField()),
                ('scientific_name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Pubmed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pubmed_id', models.TextField(unique=True)),
                ('title', models.TextField()),
                ('authors', models.TextField()),
                ('year', models.PositiveIntegerField(default=1900)),
                ('source', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Tissue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(unique=True)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Protein',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniprot_accession', models.CharField(max_length=25, unique=True)),
                ('gene_accession', models.CharField(max_length=25)),
                ('entry_name', models.CharField(default='', max_length=250)),
                ('description', models.TextField()),
                ('organism', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.organism')),
            ],
        ),
        migrations.CreateModel(
            name='Interaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('p1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prot1_set', to='base.protein')),
                ('p2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prot2_set', to='base.protein')),
            ],
        ),
        migrations.CreateModel(
            name='Evidence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quality', models.CharField(choices=[('HT', 'High Throughput'), ('LC', 'Literature Curated')], max_length=2)),
                ('evidence_type', models.IntegerField(choices=[(0, 'Binary'), (1, 'Co Complex')])),
                ('interaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.interaction')),
                ('method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.miterm')),
                ('pubmed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.pubmed')),
                ('tissue', models.ForeignKey(default=base.models.Tissue.get_default_pk, on_delete=django.db.models.deletion.CASCADE, to='base.tissue')),
            ],
        ),
    ]
